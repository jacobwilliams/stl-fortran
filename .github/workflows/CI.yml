name: CI
on: [push]
jobs:

  Build:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        gcc_v: [9,10,11,12]  # gfortran versions to test
        python-version: [3.12]
    env:
      FC: gfortran-${{ matrix.gcc_v }}
      GCC_V: ${{ matrix.gcc_v }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3.0.2
      with:
        submodules: recursive

    - name: Install Python
      if: contains( matrix.gcc_v, 12 )
      uses: actions/setup-python@v5.3.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: Setup Graphviz
      if: contains( matrix.gcc_v, 12 )
      uses: ts-graphviz/setup-graphviz@v1

    - name: Setup Fortran Package Manager
      uses: fortran-lang/setup-fpm@v6.1.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install Python dependencies
      if: contains( matrix.gcc_v, 12 )
      run: |
        python -m pip install --upgrade pip
        pip install ford numpy matplotlib

    - name: Install GFortran Linux
      run: |
        sudo apt-get install lcov
        sudo update-alternatives \
           --install /usr/bin/gcc gcc /usr/bin/gcc-${{ matrix.gcc_v }} 100 \
           --slave /usr/bin/gfortran gfortran /usr/bin/gfortran-${{ matrix.gcc_v }} \
           --slave /usr/bin/gcov gcov /usr/bin/gcov-${{ matrix.gcc_v }}

    - name: Run tests
      run: fpm test --profile debug --flag -coverage

    - name: Create coverage report
      if: contains( matrix.gcc_v, 12 )
      run: |
        mkdir -p ${{ env.COV_DIR }}
        mv ./build/gfortran_*/*/* ${{ env.COV_DIR }}
        lcov --capture --initial --base-directory . --directory ${{ env.COV_DIR }} --output-file ${{ env.COV_DIR }}/coverage.base
        lcov --capture           --base-directory . --directory ${{ env.COV_DIR }} --output-file ${{ env.COV_DIR }}/coverage.capture
        lcov --add-tracefile ${{ env.COV_DIR }}/coverage.base --add-tracefile ${{ env.COV_DIR }}/coverage.capture --output-file ${{ env.COV_DIR }}/coverage.info
      env:
        COV_DIR: build/coverage

    - name: Upload coverage report
      if: contains( matrix.gcc_v, 12 )
      uses: codecov/codecov-action@v5.1.2
      with:
          files: build/coverage/coverage.info

    - name: Build documentation
      if: contains( matrix.gcc_v, 12 )
      run: ford ./stl-fortran.md

    - name: Deploy Documentation
      if: contains( matrix.gcc_v, 12 ) && github.ref == 'refs/heads/master'
      uses: JamesIves/github-pages-deploy-action@v4.4.1
      with:
        branch: gh-pages # The branch the action should deploy to.
        folder: doc  # The folder the action should deploy.
